syntax = "proto3";

option go_package = "github.com/XWS-Dislinkt-Developers/Dislinkt-backend/common/user_connection_service";

package user_connection_service;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

service UserConnectionService {
  rpc GetAll(GetAllRequest) returns(GetAllResponse) {
    option (google.api.http) = {
      get: "/userConnections"
    };
  };
  rpc Follow(FollowRequest) returns (FollowResponse){
    option (google.api.http) = {
      put: "/follow/{idUser}"
    };
  };
  rpc Unfollow(FollowRequest) returns (FollowResponse){
    option (google.api.http) = {
      put: "/unfollow/{idUser}"
    };
  };
  rpc AcceptConnectionRequest(FollowRequest) returns (FollowResponse){
    option (google.api.http) = {
      put: "/accept/{idUser}"
    };
  };
  rpc DeclineConnectionRequest(FollowRequest) returns (FollowResponse){
    option (google.api.http) = {
      put: "/decline/{idUser}"
    };
  };
  rpc GetConnectionsByUser(FollowRequest) returns (Connections){
    option (google.api.http) = {
      get: "/connections/{idUser}"
    };
  }
}

message FollowRequest{
  int64 idUser = 1;
}

message FollowResponse{
  repeated UserConnection userConnections = 1;
}

message GetAllRequest {
}

message GetAllResponse {
  repeated UserConnection userConnections = 1;
}

message UserConnection {
  int64 userId = 1;
  bool private = 2;
  repeated int64 connections = 3;
  repeated int64 requests = 4;
}

message Connections {
   Connection connections = 1;
}

message Connection {
  repeated int64 connections = 1;
}