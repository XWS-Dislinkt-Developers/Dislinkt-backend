syntax = "proto3";

option go_package = "github.com/XWS-Dislinkt-Developers/Dislinkt-backend/common/user_post_service";

package user_post_service;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

service UserPostService{

  rpc Get(GetRequest) returns(GetResponse) {
      option (google.api.http) = {
        get: "/userPost/{id}"
      };
  }

  rpc GetAll(GetAllRequest) returns(GetAllResponse) {
      option (google.api.http) = {
        get: "/userPosts"
      };
  }

  rpc GetPostsForFeed(GetAllRequest)  returns(GetAllResponse){
    option (google.api.http) = {
      get: "/feed"
    };
  }

  rpc CreateUserPost(CreateUserPostRequest) returns(CreateUserPostResponse) {
    option (google.api.http) = {
      post: "/userPost"
      body: "userPost"
    };
  }

  // TODO: AddReactionToUserPost
  rpc AddReactionToUserPost(AddReactionRequest) returns(GetResponse) {
    option (google.api.http) = {
      post: "/reaction"
      body: "addReaction"
    };
  }

  // TODO: AddCommentToUserPost
  rpc AddComment(AddCommentRequest) returns(GetResponse) {
    option (google.api.http) = {
      post: "/comment"
      body: "addComment"
    };
  }

  rpc GetUserPosts (GetUserPostsRequest) returns(GetAllResponse) {
    option (google.api.http) = {
      get: "/getUserPosts/{id}"
    };
  }

  rpc GetPostsForLoggedUserProfile(GetAllRequest) returns(GetAllResponse) {
    option (google.api.http) = {
      get: "/getPostsForLoggedUser"
    };
  }
}

message GetUserPostsRequest {
  int64 id = 1;
}

//TODO: AddCommentToUserPostRequest{...}
message AddCommentRequest {
  AddComment addComment = 1;
}

message AddComment {
  string idPost = 1;
  string text = 2;
  //google.protobuf.Timestamp createdAt = 3;
}

//TODO: AddCommentToUserPostResponse{...}

message GetRequest {
  string id = 1;
}

message GetResponse {
  UserPost userPost = 1;
}

message GetAllRequest {
}

message GetAllResponse {
  repeated UserPost userPosts = 1;
}

message CreateUserPostRequest {
  UserPost userPost = 1;
}

message CreateUserPostResponse {
  UserPost userPost = 1;
}

//TODO: AddReactionToUserPostRequest{...}
message AddReactionRequest {
  AddReaction addReaction = 1;
}

//TODO: AddReactionToUserPostResponse{...}

/*
 -- Mislim da ovo nece trebati

message NewUserPost {
  repeated Reaction reactions = 1;
  repeated Comment comments = 2;
}
*/

message UserPost {
  string id = 1;
  int64  userId = 2;
  google.protobuf.Timestamp createdAt = 3;
  string text = 4;
  string imagePath = 5;
  repeated Reaction reactions = 6;
  repeated Comment comments = 7;
}

message Reaction {
  int64  userId = 1;
  bool liked = 2;
  bool disliked = 3;
}

message AddReaction {
  string  postId = 1;
  bool liked = 2;
  bool disliked = 3;
}

message Comment {
  int64  userId = 1;
  google.protobuf.Timestamp createdAt = 2;
  string text = 3;
}