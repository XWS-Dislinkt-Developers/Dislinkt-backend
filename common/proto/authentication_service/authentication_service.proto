syntax = "proto3";

option go_package = "github.com/XWS-Dislinkt-Developers/Dislinkt-backend/common/authentication";

package authentication;

import "google/api/annotations.proto";

service AuthenticationService{
        rpc Register(RegisterRequest) returns (RegisterResponse) {
                option (google.api.http) = {
                        post: "/register"
                        body:"user"
              };
        }
        rpc FindUser(FindUserRequest) returns (FindUserResponse) {
                option (google.api.http) = {
                        post: "/user"
                        body:"findUser"
                };
        }
        rpc Login(LoginRequest) returns (LoginResponse) {
                option (google.api.http) = {
                  post: "/login"
                    body: "userData"
                };
        }
        rpc Validate(ValidateRequest) returns (ValidateResponse) {}
        rpc ConfirmAccount(ConfirmAccountRequest) returns (ConfirmAccountResponse){
                option (google.api.http) = {
                        get: "/confirmAccount/{token}"
                };
        }
        rpc PasswordRecoveryRequest(PasswordRecoveryReq) returns (PasswordRecoveryResponse) {
                option (google.api.http) = {
                        post: "/passwordRecoveryRequest"
                        body: "email"
                };
        }
        rpc PasswordRecovery(ChangePasswordWithCodeRequest) returns (PasswordRecoveryResponse) {
                option (google.api.http) = {
                        post: "/passwordRecovery"
                        body: "changePassword"
                };
        }
        rpc PasswordlessLoginRequest(PasswordlessLoginReq) returns (PasswordRecoveryResponse) {
                option (google.api.http) = {
                        post: "/passwordlessLoginRequest"
                        body: "email"
                };
        }
        rpc PasswordlessLogin(PasswordlessLogRequest) returns (LoginResponse) {
                option (google.api.http) = {
                        post: "/passwordlessLogin"
                        body: "code"
                };
        }
}

message Email {
        string email = 1;
}

message Code {
        string code = 1;
}

message PasswordlessLoginReq {
        Email email = 1;
}

message PasswordlessLogRequest {
        Code code = 1;
}

message PasswordRecoveryResponse {
        int64 status = 1;
        string error = 2;
        string email = 3;
}

message  ChangePasswordWithCodeRequest{
        ChangePassword changePassword = 1;
}

message ChangePassword {
        string code = 1;
        string password = 2;
        string confirmPassword = 3;
}

message PasswordRecoveryReq {
        PasswordRecovery email = 1;
}

message PasswordRecovery{
        string email = 1;
}

message  ConfirmAccountRequest {
        string token = 1;
}

message  ConfirmAccountResponse {
        string email = 1;
        string response = 2;
}

message UserData{
        string username = 1;
        string password = 2;
}

message UpdateUserData{
        string username = 1;
        string name = 2;
        string phoneNumber = 3;
        string email = 4;
        string gender = 5;
        string dateOfBirth = 6;
        string biography = 7;
}

message UpdateUserSAI{
        string skills = 1;
        string interests = 2;
}

message UpdateUserWAE{
        string work = 1;
        string education = 2;
}

message UpdateUserSAIRequest {
        UpdateUserSAI updateUserData=1;
}

message UpdateUserSAIResponse {
        int64 status = 1;
        string error = 2;
}

message UpdateUserWAERequest {
        UpdateUserWAE updateUserData=1;
}

message UpdateUserWAEResponse {
        int64 status = 1;
        string error = 2;
}

message UpdatePersonalDataRequest {
        UpdateUserData updateUserData=1;
}

message UpdatePersonalDataResponse {
        int64 status = 1;
        string error = 2;
}

message UserRegistrationData{
        string username = 1;
        string name = 2;
        string email = 3;
        string gender = 4;
        string dateOfBirth = 5;
        string password = 6;
        string confirmPassword = 7;
}

message RegisterRequest {
        UserRegistrationData user=1;
}
      
message RegisterResponse {
        int64 status = 1;
        string error = 2;
        int64  userId = 3;
}

message LoginRequest {
        UserData userData = 1;
}
      
message LoginResponse {
        int64 status = 1;
        string error = 2;
        string token = 3;
        string username=4;
        int64 id = 5;
        string role = 6;
}

message ValidateRequest {
         string token = 1;
}
      
message ValidateResponse {
        int64 status = 1;
        string error = 2;
        int64 userId = 3;
}

message GetAllRequest {
}

message GetAllResponse {
        repeated User users = 1;
}

message User {
        int64 id = 1;
        string name = 2;
        string username = 3;
        string password = 4;
        string email = 5;
        string address = 6;
        string gender = 7;
}

message FindUserRequest {
        FindUser findUser = 1;
}

message  FindUser {
        string username = 1;
}

message FindUserResponse {
        User user = 1;
}